<?xml version='1.0' encoding='UTF-8'?>

<project xmlns:ivy="antlib:org.apache.ivy.ant" name="migratesdk" default="warn" basedir=".">
    <property name="name" value="migrate-sdk"/>

    <property name="migrate.service.dir" value="${basedir}/../migrate"/>
    <property name="migrate.client.dir" value="${basedir}/../migrate-client/android/migrate-client"/>
    <property name="migrate.browser.dir" value="${basedir}/samples/migrate-browser"/>

    <property name="migrate.sdk.artifact" value="migrate-sdk-beta"/>

    <property name="lib" value="lib"/>
    <property name="deps" value="deps"/>
    <property name="src" value="src"/>

    <property name="build.home" value="${basedir}/build"/>
    <property name="build.classes" value="${build.home}/classes"/>
    <property name="build.dist" value="${build.home}/dist"/>
    <property name="build.dist.artifact.dir" value="${build.home}/dist/${migrate.sdk.artifact}"/>
    <property name="build.dist.lib" value="${build.dist.artifact.dir}/lib"/>
    <property name="build.dist.lib.api" value="${build.dist.lib}/api"/>
    <property name="build.dist.lib.impl" value="${build.dist.lib}/impl"/>

    <target name="rebuild" depends="clean,dist"/>

    <property name="ivy.install.version" value="2.3.0-rc1"/>
    <property name="ivy.jar.dir" value="${basedir}/ivy"/>
    <property name="ivy.jar.file" value="${ivy.jar.dir}/ivy.jar"/>

    <target name="download-ivy" unless="skip.download">
        <mkdir dir="${ivy.jar.dir}"/>
        <!--
        download Ivy from web site so that it can be used even without any special installation
        -->
        <echo message="installing ivy..."/>
        <get src="http://repo1.maven.org/maven2/org/apache/ivy/ivy/${ivy.install.version}/ivy-${ivy.install.version}.jar" dest="${ivy.jar.file}" usetimestamp="true"/>
    </target>

    <target name="install-ivy" depends="download-ivy" description="--> install ivy">
        <!--
         try to load ivy here from local ivy dir, in case the user has not already dropped it into
         ant's lib dir (note that the latter copy will always take precedence). We will not fail as
         long as local lib dir exists (it may be empty) and ivy is in at least one of ant's lib dir
         or the local lib dir.
        -->
        <path id="ivy.lib.path">
            <fileset dir="${ivy.jar.dir}" includes="*.jar"/>
        </path>
        <taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path"/>
    </target>

    <target name="resolve" description="--> resolve ivy dependencies" depends="install-ivy">
        <property name="ivy.dep.file" value="${basedir}/ivy.xml" />
        <property name="ivy.lib.dir" value="${build.dist.lib.impl}" />
        <ivy:retrieve />
    </target>

    <target name="clean" description="Delete old build and dist directories">
        <delete dir="${build.home}"/>
    </target>

    <path id="compile.classpath">
        <fileset dir="lib">
            <include name="*.jar"/>
        </fileset>
        <fileset dir="${build.dist.lib.impl}">
            <include name="*.jar"/>
        </fileset>
        <fileset dir="deps">
            <include name="*.jar"/>
        </fileset>
    </path>

    <target name="compile" depends="resolve">
        <mkdir dir="${build.classes}"/>

        <javac srcdir="${src}" destdir="${build.classes}">
            <classpath refid="compile.classpath"/>
        </javac>
    </target>

    <target name="warn" depends="dist">
        <echo message="WARNING: If you only want to use the migrate binary SDK, please follow the ./README instructions for getting started. Building the SDK is for advanced users only."/>
        <echo message=""/>
        <echo message=""/>
        <sleep seconds="10"/>
    </target>

    <target name="dist" depends="compile" description="Create binary distribution">
        <mkdir dir="${build.dist.lib.impl}"/>

        <copy todir="${build.dist.lib.api}/">
            <fileset dir="lib" includes="*.jar"/>
        </copy>
        <copy todir="${build.dist.lib.impl}/">
            <fileset dir="deps" includes="*.jar"/>
        </copy>

        <copy todir="${build.dist.artifact.dir}/">
            <fileset dir="${basedir}" includes="migrate-sdk.xml"/>
        </copy>

        <jar jarfile="${build.dist.lib.impl}/${name}.jar" basedir="${build.classes}"/>
    </target>

    <target name="build.migrate.client">
        <ant antfile="${migrate.client.dir}/build.xml" usenativebasedir="true" target="dist"/>
        <ant antfile="${migrate.client.dir}/build-libs.xml" usenativebasedir="true" target="dist"/>
    </target>

    <target name="build.migrate.service">
        <ant antfile="${migrate.service.dir}/build.xml" usenativebasedir="true" target="dist"/>
    </target>

    <target name="build.migrate.browser">
        <copy file="${migrate.client.dir}/build/dist/libs/migrate-api.jar" todir="${migrate.browser.dir}/lib"/>

        <ant antfile="${migrate.browser.dir}/build.xml" usenativebasedir="true" target="dist"/>
    </target>

    <target name="prepare.deps" depends="build.migrate.service,build.migrate.client,build.migrate.browser">
        <copy file="${basedir}/README.md" todir="${build.dist.artifact.dir}"/>

        <copy file="${basedir}/migrate.xml" todir="${build.dist.artifact.dir}"/>
        <copy file="${basedir}/migrate.properties" todir="${build.dist.artifact.dir}"/>

        <copy file="${migrate.service.dir}/dist/migrate.war" todir="${build.dist.artifact.dir}"/>
        <copy file="${migrate.service.dir}/dist/migrate-model.jar" todir="${build.home}"/>

        <copy file="${migrate.client.dir}/build/dist/libs/migrate-api.jar" todir="${lib}"/>
        <copy file="${migrate.client.dir}/migrate/build/outputs/apk/migrate-debug-unaligned.apk" todir="${build.dist.artifact.dir}"/>

        <copy file="${migrate.browser.dir}/bin/migrate-browser.apk" todir="${build.dist.artifact.dir}"/>
    </target>

    <target name="dist.deps" depends="prepare.deps,dist" >
        <zip file="${build.dist}/${migrate.sdk.artifact}.zip" basedir="${build.dist}" includes="${migrate.sdk.artifact}/**/*"/>
    </target>

    <target name="deps.clean" depends="clean">
        <ant antfile="${migrate.client.dir}/build.xml" usenativebasedir="true" target="clean"/>
        <ant antfile="${migrate.service.dir}/build.xml" usenativebasedir="true" target="clean"/>
    </target>

    <!--Alias thats easier to remember?-->
    <target name="dist.deps.clean" depends="deps.clean" />

</project>
