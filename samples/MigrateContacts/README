MigrateContacts
--------------------------------------------------

This migrate sample application provides a simple contacts application that
tracks information about people you know.

Requirements
--------------------------------------------------

This project was tested on an ARM emulator for a Galaxy Nexus device, running
Android API Level 15, Ice Cream Sandwich, with a gig of memory. It should run,
as well, on most any device, API Level 11 or greater. This MigrateContacts
application depends on the Migrate project SDK and will work only on a device
that has an installed Migrate client (migrate-client.apk). You must configure
the Migrate client to communicate with a valid Migrate backend service instance
that implements the WebData API - the binary apk in the sdk, connects to a
local migrate instance and assumes that it runs in the Android emulator.

Getting started:
--------------------------------------------------

Instructions refer to the unpacked archive directory as $MIGRATE_SDK.

This README describes the following tasks you'll need to complete to get the
migrate contacts example working. they're pretty straight forward - and can
be summarized as follows:

Unpack the SDK, install the apks, create a migrate account, setup the schema,
turn on sync, run the MigrateContacts client. The project is designed to be
simple to install, yet powerful enough to address all of your application's
networking and persistence needs.

Make sure you have completed all the steps from the main SDK readme.

This file describes the following tasks:

- You need to have installed the migrate-client.apk, explained in the overall
  $MIGRATE_SDK/README.md
- Configuring the MigrateContacts project.
- Creating a contract and posting schema.
- Compiling and running the Migrate contacts APK.

--------------------------------------------------
Configure MigrateContacts

Follow the instructions in migrate.xml. Note that for the MigrateContacts
SDK sample, you likely wont need to edit migrate.properties, its already
been copied to the MigrateContacts directory and edited so that it will work
"out of the box" with Android studio. However, the instructions below
are written so that you will know the relevant files to copy and
edit when you create your own migrate application.

cd $MIGRATE_SDK/samples/MigrateContacts

- Drag and drop or copy migrate.xml into place:

cd $CODE/MigrateContacts
cp $MIGRATE_SDK/migrate.xml .

In fact for the SDK sample, the file is already in place.

- Drag and drop or copy migrate.properties into place and edit it for your project.

cp $MIGRATE_SDK/tools/migrate.properties .

For MigrateContacts, the file is already edited.

Set the location of the migrate sdk in this file as follows:

migrate.sdk.root=$MIGRATE_SDK

The actual line might look like the following:

migrate.sdk.root=../../migrate-sdk-beta

For MigrateContacts, leave it as ../..

- Copy the migrate-api.jar into place:

mkdir -p libs
cp $MIGRATE_SDK/lib/api/migrate-api.jar ./libs

Omit for MigrateContacts

--------------------------------------------------
Compile your schema contract class:

cd $MIGRATE_SDK/samples/MigrateContacts
ant -f build-schema.xml

This ant task outputs the following class that directs the generation
of the Migrate contacts API:

build/classes-schema/com/enterpriseandroid/migratecontacts/Contact.class

--------------------------------------------------
Generate the schema contract:

First, make sure the Android source directory exists. For MigrateContacts
it already does, just use, $MIGRATE_SDK/samples/MigrateContacts/app/src (its already configured as
$MIGRATE_SDK/samples/MigrateContacts/app/src/main/java).

- The following command creates a data API for your Android application 
using the class from the previous step:

ant -f migrate.xml

On success, the code will create the following source file:

$MIGRATE_SDK/samples/MigrateContacts/app/src/main/java/com/enterpriseandroid/migratecontacts/ContactContract.java

The file ContactContract.java ships with the migrate sdk.

--------------------------------------------------
Post the schema to the migrate service using:

ant -f migrate.xml postSchema

This command makes the MigrateContacts schema available to the migrate service
where migrate clients can use it to sync. Schema is generated form the class
in step 4.

- Test your posted schema, by using curl to retrieve it:

curl -X GET http://projectmigrate.com/schema/com.enterpriseandroid.migratecontacts.Contact

Should return:

{"wd_id":"com.enterpriseandroid.migratecontacts.Contact","wd_version":1,"wd_classname":"com.migrate.webdata.model.PersistentSchema","wd_updateTime":1420414340970,"wd_namespace":"__schema","wd_deleted":false,"jsonSchema":{"properties":{"wd_version":{"required":true,"type":"integer"},"wd_deleted":{"required":true,"type":"integer"},"phoneNumber":{"type":"string"},"email":{"type":"string"},"lastname":{"type":"string"},"wd_id":{"required":true,"type":"string"},"wd_namespace":{"type":"string"},"firstname":{"type":"string"},"wd_classname":{"type":"string"},"wd_updateTime":{"required":true,"type":"long"}},"type":"object"},"indexList":null,"status":0}

--------------------------------------------------
Install and run the migrate-client.apk from the SDK:

- Run the android emulator, as you've seen in earlier chapters, you can run
the emulator from Android studio. Once its running, install the Migrate client APK:

$MIGRATE_SDK/install_client.sh

The binary client in the SDK assumes that the service uses the beta instance,
http://projectmigrate.com/ . If you run your own instance, you
will need to use the android Emulator host (10.0.2.2), or localhost.

On success, you will see a Toast that says, "Migrate is up!" Next you
will turn on sync, and then run the MigrateContacts client application
itself.

--------------------------------------------------
Activate Migrate sync using:

Settings -> Accounts (Projectmigrate SyncAdapter) -> Check the sync checkbox.

Note that the contacts application will not save data until you complete this
step.

----------
Run the migrate samples project.

Open $MIGRATE_SDK/samples/MigrateContacts in Android Studio.

Edit a run configuration and choose and avd. If you have setup the server properly
and


----------
Optionally, run the migrate browser.

The Migrate SDK also comes with a generic "browser" application that allows developers
to view migrate sync'ed data from all active schema. Simple select the migrate browser

